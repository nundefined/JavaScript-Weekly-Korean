원문 : [http://javascriptweekly.com/archive/138.html]

- - -
# 특집 기사

## [개발자문서: 올인원 API 문서 리더](http://devdocs.io/)
다음의 API 문서들에 대해 접근할 수 있다: HTML, CSS, DOM, DOM 이벤트, 자바스크립트, jQuery. 일반적인 장소(MDN 등)에서 가져온 자료들이지만, 기꺼이, 계속해서 스타일을 지정해왔고, 잘 동작하는 검색 UI를 제공한다. 조만간 오프라인 기능도 지원 예정이다.

## [크라우드 펀딩 사이트를 개발하기 원하시나요? (Node.js로)](https://hacks.mozilla.org/2013/07/so-you-wanna-build-a-crowdfunding-site/)
Node.js와 MongoDB와 Express를 사용해 300줄 미만의 코드로 크라우드펀딩 사이트를 개발하는 가이드

## [npmsearch: Node.js 패키지를 위한 npm 레지스트리 검색](http://npmsearch.com/)

- - -
# 스폰서 기사

## [멀티-팩터 인증을 통해 앱의 보안을 향상시키세요](http://developer.rackspace.com/blog/crank-up-app-security-with-multi-factor-authentication.html?cm_mmc=SMB12Display-_-JavaScript-_-AppDev-_-Security)
비밀번호는 죽어가고있다. 하지만 랙스페이스의 최고 보안 아키텍트, Major Hayden에 따르면, 그 속도가 충분히 빠르지는 않다. 우리중 대부분은 사용자이름과 비밀번호로 웹 애플리케이션과 상호작용한다. [왜 단일 비밀번호가 더 이상 보안상 적절하지 않은지 알아보자](http://developer.rackspace.com/blog/crank-up-app-security-with-multi-factor-authentication.html?cm_mmc=SMB12Display-_-JavaScript-_-AppDev-_-Security)


- - -
# 읽을 거리

## [자바스크립트, 이기는 스타일](http://seravo.fi/2013/javascript-the-winning-style)
흥미로운 아이디어: 이 기사는 일련의 코딩스타일 이슈(인덴트를 얼마나 줄 것인가, 세미콜론을 넣을까 말까, 등)를 살펴보고 그들중 가장 인기있는 스타일 가이드를 밝힌다. 포함된 *.jshintrc* 파일은 그런 가이드중 대부분이 추천하는 스타일로 강제할 수 있게 해준다.

## [setImmediate()의 실정](http://www.nczonline.net/blog/2013/07/09/the-case-for-setimmediate/)
*setImmediate(fn)* 은 아무런 시간지연없이 그리고 불필요한 타이머 생성없이 *setTimeout(fn, 0)* 을 실행한다. Nicholas Zakas는 setImmediate가 어떻게 동작하는지, 왜 중요하며, 왜 현재까지 브라우저 벤더들에게 그리 많은 사랑을 받지 못하고 있는지에 대해서 설명한다.

## [자바스크립트에서 비공개 함수를 테스트하는 방법](http://philipwalton.com/articles/how-to-unit-test-private-functions-in-javascript/)
클로저 내부에 숨겨진 함수를 유닛테스트하려면 어떻게 해야할까? 이 블로그 포스트는 유닛테스트 기법에 대해 설명한다. 비공개 함수를 전역적으로 노출하고 배포시에 제거하는 코드 조각을 포함한다.

## [jQuery 극복하기](http://blog.ponyfoo.com/2013/07/09/getting-over-jquery)
일반적인 jQuery 작업을 기본 자바스크립트로 처리하는 방법을 설명한다. 명백하게도, 구형 브라우저를 처리하기 위해서는 여전히 jQuery가 필요하다. 이 기사는 미래의 jQuery를 예상하는 것으로 결론짓는다.

## [구글 크롬 익스텐션 개발하기](http://net.tutsplus.com/tutorials/javascript-ajax/developing-google-chrome-extensions/)
대부분 자바스크립트와 일부 JSON을 사용해 구글 크롬 익스텐션을 생성하는 기초에 대해 다룬다.

## [Mousetrap으로 키보드 단축키 만들기](http://davidwalsh.name/keyboard-shortcuts)
David Walsh는 웹 애플리케이션에서 키보드 단축키를 처리하는 몇가지 마이크로 라이브러리를 평가했다. [Mousetrap](https://github.com/ccampbell/mousetrap)이 그가 가장좋아하는 라이브러리이고 이 포스트는 이에 대해 설명한다.

## [자바스크립트로 반응형 디자인 브레이크포인트 관리하기](http://www.jonathanfielding.com/managing-responsive-design-breakpointstates-in-javascript/)
미디어쿼리(같은) 기능을 얻기위한 자바스크립트의 기법에 대해 설명한다.

## [자바스크립트 린터로 분위기 지키기](http://www.kendoui.com/blogs/teamblog/posts/13-07-09/protecting-your-mellow-with-javascript-linters.aspx)
Burke Holland 는 린트 도구 JSHINT를 사용하여 정적으로 코드의 문제(문법적인 오류, 안티-패턴, 등)를 확인하는 방법을 설명한다.

## [커링이 도움이 되는 이유](http://hughfdjackson.com/javascript/2013/07/06/why-curry-helps/)
더 쉽게 함수를 합치기 위해 어떻게 커링을 사용할수 있는지 설명한다.

## [Trello는 어떻게 사용자의 클립보드에 접근하는가?](http://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard/17528590)
웹 애플리케이션인 Trello가 티나지 않게 클립보드에 '접근'(또는, 더 정확하게말하면, 접근해서 갖게되는 값을 조작)하는 영리한 핵에 대해 설명하는 답변이다.

## [놀라운 Thorax](http://blog.peterdecroos.com/blog/2013/07/05/thorax-is-awesome/)
자바스크립트 라이브러리 Backbone.js는 비교적 배우기 쉽지만, 매우 엄격하고 간소하다. 부가적인 기능을 제공하는 세 개의 인기있는 확장, 즉 Marionette, Thorax 그리고 Chaplain가 있는데, 이 블로그 포스트는 Thorax에 대해 간략하게 설명한다.

## [RequireJS와 함께하는 모듈화된 HTML 컴포넌트](http://simonsmith.io/modular-html-components-with-requirejs/)
HTML이 모듈화되었을 때 (위젯을 생각해보라) 어떻게 RequireJS를 사용하는지에 대해 설명한다.

## [백만개의 기록을 처리하는 자바스크립트 그리드](http://w2ui.com/web/blog/7/JavaScript-Grid-with-One-Million-Records)
[w2ui](http://w2ui.com/web/)는 jQuery기반 위젯의 모음이다. Vitali Malinouski는 백만개의 항목을 위한 그리드 위젯을 어떻게 만드는지 설명한다. 마지막 섹션에서는 배우게된 교훈에 대해 언급한다.

## [워커를 이용한 자바스크립트 동시성](http://typedarray.org/concurrency-in-javascript/)
웹 워커에 대해 실용적으로 살펴본다.

## [Express로 노드 애플리케이션 모듈화하기](http://blog.ponyfoo.com/2013/07/10/modularizing-node-applications-with-express)

## [Jasmine (BDD 테스팅 프레임워크) 확장하기](http://krasimirtsonev.com/blog/article/Extending-Jasmine-BDD-framework-for-testing)


- - -
# 동영상

## [클래스를 이용한 상속은 더 이상 쓸모가 없다: 프로토타입을 이용한 객체지향으로 생각하는 방법](https://vimeo.com/69255635)
생성자를 지지하는, 그리고 반대하는 논쟁들이 있다. 이 비디오에서, Adobe의 Eric Elliott는 생성자에 반대하는 것에 대해서 설명하고 프로토타입 기반의 객체 지향을 처리하는 자신의 라이브러리에 대해 설명한다. 동영상의 내용은 [블로그 포스트](http://ericleads.com/2013/02/fluent-javascript-three-different-kinds-of-prototypal-oo/)에서도 설명하였다.

## [자바스크립트로 전환하기](http://javascriptjabber.com/066-jsj-transitioning-to-javascript/)
JavaScript Jabber 팀은 다른 프로그래밍 언어에서 자바스크립트로 전환하기 위한 프로세스에 대해 논의한다. (40분 길이의 팟캐스트.)


- - -
# 릴리즈

[Node v0.10.13 (Stable)](http://blog.nodejs.org/2013/07/09/node-v0-10-13-stable/)
[Knockout v2.3.0 Released; v3.0.0 Beta Available](http://blog.stevensanderson.com/2013/07/09/knockout-v2-3-0-released-v3-0-0-beta-available/)
[RequireJS 2.1.8](http://jrburke.com/2013/07/08/requirejs-2.1.8-released/)
[Underscore.js 1.5.0](http://underscorejs.org/#changelog)
[Bower 0.10.0](https://github.com/bower/bower/blob/master/CHANGELOG.md#0100---2013-07-02)


- - -
# 코드와 라이브러리들

## [Leaflet: 모바일 친화적인 인터랙티브 맵을 위한 오픈소스 자바스크립트 라이브러리](http://leafletjs.com/)
Leaflet(JSW #27에서 처음 언급했다)은 기본적으로 고도로 설정할 수 있는(타일 레이어, 마커, 팝업 등) 맵 위젯이고 다수의 브라우저에서 동작한다. Leaflet은 Flickr, Foursquare, craigslist, Wikimedia, Meetup, 등 여러 인기있는 사이트에서 사용되고 있다.

## [TodoMVC에서의 Polymer 예제](http://todomvc.com/architecture-examples/polymer/)
[TodoMVC](http://todomvc.com/) 웹사이트는 이제 구글의 [Polymer](http://www.polymer-project.org/) 프레임워크의 예제를 포함한다.

## [ElementTransitions.js: 웹 페이지를 위한 간단한 트랜지션](http://dan-silver.github.io/ElementTransitions.js/)
"페이지"에 적용할 수 있는 애니메이션으로 새로운 페이지를 드러낼때 흥미로운 네비게이션 효과(슬라이드인, 3D 변형, 등)를 만들기 위한 라이브러리.

## [eddy.js: 이벤트-기반 자바스크립트](https://github.com/WebReflection/eddy)
브라우저와 Node.js에서 동작하는 이벤트 처리 도구

## [Supervizer: 깔끔한 Node.js 프로세스 매니저](https://github.com/oOthkOo/supervizer)
Node.js의 인스턴스를 spawn/start/stop하기 위한 데몬 프로세스 매니저
> RESTful API를 지원하는 점에서 사용성이 좋아보이네요.

## [log-globals: 콘솔에 전역 변수를 기록한다](https://github.com/sindresorhus/log-globals)
북마클릿이나 [개발도구 스니펫](https://github.com/bgrins/devtools-snippets#to-enable-devtools-snippets-in-chrome) 으로 사용하기 좋은 라이브러리

## [setImmediate.js: setImmediate()를 위한 폴리필](https://github.com/NobleJS/setImmediate)

## [Anima: Transforms와 Transitions을 이용한 jQuery 애니메이션 플러그인](https://github.com/minimit/minimit-anima)
구형 브라우저 폴백을 지원하는 하드웨어 가속 CSS3 애니메이션 플러그인

## [TreeModel: 자바스크립트로 트리-같은 구조를 조작하고 트래버싱](http://jnuno.com/tree-model-js/)

## [he: 자바스크립트로 작성된 강건한 HTML 엔티티 인코더/디코더](https://github.com/mathiasbynens/he)
HTML 엔티티를 브라우저가 처리하는 것처럼 파싱하는 라이브러리. 이 과정은 생각보다 더 복잡하다.

## [Haste Compiler: 하스켈을 자바스크립트로 트랜스컴파일](https://github.com/valderman/haste-compiler)

## [typescript-pong: Pong의 TypeScript 구현체](https://github.com/sufianrhazi/typescript-pong)


- - -
# 일자리

## [NHL(National Hockey League)의 시니어 프론트엔드 개발자 (뉴욕, NY)](http://hockeyjobs.nhl.com/teamwork/r.cfm?i=56435)
NHL 브로드밴드와 모바일 사이트의 다음 세대를 설계하고 개발하기위한 핵심 역할을 맡을 우수한 프론트엔드 엔지니어를 찾고 있다. 하키에 대한 지식은 필요없지만, HTML/CSS/JS/jQuery의 탄탄한 개발경험은 필수다.

## [내셔널 지오그래픽 소사이어티의 프론트엔드 개발자](http://www.nationalgeographic.com/jobs)
디지털 스토리텔링의 다음 매력적인 단계를 만드는데 도움을 주고 싶나? 자바스크립트, HTML, CSS를 중점적으로 사용하나? 우리 산업에 정통하고 계속해서 배우는데 흥미가 있는 사람을 찾고 있다. Django 경험에 가산점을 부여한다!


- - -
# 마지막으로,

## [JavaScriptOO.com: 자바스크립트 프로젝트 디렉토리](http://www.javascriptoo.com/)
주제별(UI, 애니메이션, 브라우저 등)로 필터링한 내용의 목록을 보고, 몇몇 기준(컨트리뷰터 수, watcher수, 등)으로 정렬할 수 있다. 대부분의 항목은 프로젝트를 설명하는 코드예제를 포함한다.